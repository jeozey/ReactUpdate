apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir "src/main/libs"
    }

    defaultConfig {
        applicationId "com.jeo.reactupdate"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        ndk {
            moduleName "bsdiff"
            ldLibs 'log'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    // We need to set the libs dir for the output and the srcdirs to null to
//        // prevent the gradle ndk hooks from firing.  We need to depend on Android.mk
//    // NOTE: this appears to break the android studio 'android' project view
//    // (at least, it hides the jni directory…)
//    sourceSets.main {
//        //Tell Gradle where to put the compiled library
//        jniLibs.srcDir 'src/main/libs'
//
//        //hide the ‘jni’ folder so that the automatic gradle build doesn’t try to run
//        //it’s own ndk-build process
//        jni.srcDirs = [];
//    }
//    // Tell Gradle the run the ndkBuild task when compiling
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn ndkBuild
//    }
//
//    // This task utilizes the Android.mk file defined in src/main/jni so that you
//    // have more control over the build parameters (like library inclusion)
//    task ndkBuild(type: Exec) { //println ('Hello'+file('src/main/jni').absolutePath)
//        commandLine 'ndk-build', '-C', file('src/main/jni').absolutePath
//        //commandLine 'echo \"123\"'
//    }

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        println('compiling jni code with ndk-build...')
        def ndkDir = android.ndkDirectory
        if (System.properties['os.name'].toLowerCase().contains('windows')) {
            commandLine "$ndkDir/ndk-build.cmd",
                    '-C', file('src/main/jni').absolutePath
            // Additional ndk-build arguments, such as NDK_DEBUG, can be provided here
        } else {
            commandLine "$ndkDir/ndk-build",
                    '-C', file('src/main/jni').absolutePath
            // Additional ndk-build arguments, such as NDK_DEBUG, can be provided here
        }
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        def ndkDir = android.ndkDirectory
        if (System.properties['os.name'].toLowerCase().contains('windows')) {
            commandLine "$ndkDir/ndk-build.cmd",
                    '-C', file('src/main/jni').absolutePath,
                    'clean'
        } else {
            commandLine "$ndkDir/ndk-build",
                    '-C', file('src/main/jni').absolutePath,
                    'clean'
        }
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile files('libs/xUtils-2.6.14.jar')
    compile 'com.facebook.react:react-native:+'
}
